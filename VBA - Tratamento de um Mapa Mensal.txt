Sub Prep_Mapa_Volume_Mensal()

'Preparação do Mapa Volume Mensal

Application.ScreenUpdating = False

Dim w As Worksheet
Dim ultcel As Range
Dim area_dados As Range
Dim area_limpeza As Range
Dim area_ordenar As Range
Dim coluna_encontrada As Long
Dim area_acumulador As Range
Dim area_acumulador_números As Range

'Variáveis para inserir os acumulador de horas e volume de forma dinâmica
Dim local_cabeçalho_1 As Variant
Dim local_cabeçalho_2 As Variant
Dim valor_horas As Double
Dim valor_volume As Double
Dim acumulador_horas As Double
Dim acumulador_volume As Double

Dim resposta As Integer

Set w = Sheets("Folha1")

'Variáveis para controlar dinamicamente o nome do ficheiro submetido no ambiente de trabalho
Dim data_txt As String
Dim número_mês As String
Dim número_ano As String
Dim designação_mês As String
Dim designação_mês_completo As String

Set ultcel = w.Range("A" & Rows.Count).End(xlUp)

'Atribui a contagem do número de ações à última célula da coluna B
ultcel.Offset(0, 1).Value = Application.WorksheetFunction.CountA(Range("B3:B" & ultcel.Row - 1))

'Coloca a última linha a negrito
Rows(ultcel.Row).Font.Bold = True

'Formato tipo de letra
Cells.Font.Name = "Segoe UI"
Cells.Font.Size = 11

'Ajusta a largura de algumas colunas automaticamente
Range("E2:AI2").Columns.AutoFit

'Ajusta a largura das primeiras colunas
Columns("A").ColumnWidth = 30
Columns("B").ColumnWidth = 20
Columns("C").ColumnWidth = 25
Columns("D").ColumnWidth = 32

'Insere os limites na área de dados

Set area_dados = w.Range("A1:AI" & ultcel.Row)

area_dados.Borders.LineStyle = xlcontinuos
area_dados.Borders.Weight = xlThin

'Limpa os limites inferiores desnecessários e retira a cor

Set area_limpeza = w.Range("C" & ultcel.Row & ":E" & ultcel.Row)

area_limpeza.Borders.LineStyle = xlLineStyleNone

With area_limpeza.Interior
    .Pattern = xlNone
    .TintAndShade = 0
    .PatternTintAndShade = 0
End With

'Retira os zeros da folha

ActiveWindow.DisplayZeros = False

'Ordena os dados de acordo com o duplo critério: Nº Projeto e Ref. Ação

Set area_ordenar = w.Range("A2:AI" & ultcel.Row - 1)

ActiveWorkbook.Worksheets("Folha1").Sort.SortFields.Clear
ActiveWorkbook.Worksheets("Folha1").Sort.SortFields.Add2 Key:=Range("B3:B" & ultcel.Row - 1) _
        , SortOn:=xlSortOnValues, Order:=xlAscending, DataOption:=xlSortNormal
ActiveWorkbook.Worksheets("Folha1").Sort.SortFields.Add2 Key:=Range("A3:A" & ultcel.Row - 1) _
        , SortOn:=xlSortOnValues, Order:=xlAscending, DataOption:=xlSortNormal
With ActiveWorkbook.Worksheets("Folha1").Sort
    .SetRange Range("A2:AI" & ultcel.Row - 1)
    .Header = xlYes
    .MatchCase = False
    .Orientation = xlTopToBottom
    .SortMethod = xlPinYin
    .Apply
End With
   
'-------------------------------------------------------------------------------------------
'Utilização das variáveis de data para determinação das horas e volume de formação acumulado
'-------------------------------------------------------------------------------------------

data_txt = w.Range("F1").Text

número_mês = Mid(data_txt, 4, 2)
número_ano = Mid(data_txt, 7, 4)

designação_mês = UCase(MonthName(número_mês, True))

'-------------------------------------------------------------------------------------------------
'Automatizar o cálculo das horas e volume acumulado até um determinado mês, de uma forma dinâmica
'-------------------------------------------------------------------------------------------------

'Insere designação do mês para procura na célula A1, esta funcionalidade coloca inicial maiúscula e a função mês devolve o nº do mês, através da data inserida no mapa
w.Range("A1").Value = StrConv(MonthName(número_mês), vbProperCase)

'Estrutura de repetição para procura do mês atual na matriz dos dados

designação_mês_completo = w.Range("A1").Value

w.Range("H1").Select

Do While ActiveCell.Value <> designação_mês_completo:

    ActiveCell.Offset(0, 1).Select

    coluna_encontrada = ActiveCell.Column

Loop

'Determina o local para inserir os dados acumulados
local_cabeçalho_1 = Cells(ultcel.Row + 3, coluna_encontrada).Address
local_cabeçalho_2 = Cells(ultcel.Row + 3, coluna_encontrada + 1).Address

'Insere um primeiro cabeçalho
w.Range(local_cabeçalho_1).Offset(-1, 0).Value = "Dados Acumulados"

'Faz união das células onde o cabeçalho se encontra
w.Range(Cells(ultcel.Row + 2, coluna_encontrada), Cells(ultcel.Row + 2, coluna_encontrada + 1)).Merge

'Insere os segundos cabeçalhos
w.Range(local_cabeçalho_1).Value = "Horas"
w.Range(local_cabeçalho_2).Value = "Volume"

'Estrutura de repetição para determinar os valores acumulados, de um modo dinâmico

For i = 0 To (número_mês - 1):
    
    'Com i * 2, garante-se que o acumulador começa em janeiro e vai saltar gradualmente de 2 em 2
    valor_horas = w.Range("J" & ultcel.Row).Offset(0, i * 2).Value
    valor_volume = w.Range("K" & ultcel.Row).Offset(0, i * 2).Value
    
    acumulador_horas = acumulador_horas + valor_horas
    acumulador_volume = acumulador_volume + valor_volume

Next i

'Atribui os valores do acumulador
w.Range(local_cabeçalho_1).Offset(1, 0).Value = acumulador_horas
w.Range(local_cabeçalho_2).Offset(1, 0).Value = acumulador_volume

'Determina a área onde se encontra o acumulador

Set area_acumulador = w.Range(Cells(ultcel.Row + 2, coluna_encontrada), Cells(ultcel.Row + 4, coluna_encontrada + 1))

With area_acumulador
    .HorizontalAlignment = xlCenter
    .VerticalAlignment = xlCenter
    .Columns.AutoFit
End With

Set area_acumulador_números = w.Range(Cells(ultcel.Row + 4, coluna_encontrada), Cells(ultcel.Row + 4, coluna_encontrada + 1))

area_acumulador.Font.Bold = True

area_acumulador.Borders.LineStyle = xlcontinuos
area_acumulador.Borders.Weight = xlThin
area_acumulador.Interior.Color = RGB(146, 205, 220)

area_acumulador_números.NumberFormat = "#,##0.00"
With area_acumulador_números.Interior
    .Pattern = xlNone
    .TintAndShade = 0
    .PatternTintAndShade = 0
End With

'---------------------------------------------------------------------------------
'Introdução dos valores de horas e volume de referência, relativos ao mês anterior
'---------------------------------------------------------------------------------

'Esta análise não é efetuada em janeiro, pois não existem meses fechados para se analisarem
If número_mês > 1 Then
    
    Dim livro_pesquisa As Workbook
    Dim livro_atual As Workbook
    Dim número_mês_anterior As String
    Dim designação_mês_anterior As String
    Dim área_extrair As Range
    Dim ultcel_extrair As Range
    
    Set livro_atual = ThisWorkbook
    
    número_mês_anterior = número_mês - 1
        
        'Garante 0 atrás do nome dos meses com algarismo de apenas 1
        
        If Len(número_mês_anterior) = 1 Then
            
            número_mês_anterior = "0" & número_mês_anterior
        
        End If
        
    designação_mês_anterior = UCase(MonthName(número_mês_anterior, True))
    
    'Este comando abre automaticamente o livro onde se pretende obter os dados - Nome dinâmico
    'É necessário fazer referência ao mês anterior
    Workbooks.Open ("C:\Users\joaogrilo\Documents\Ficheiros de Análise\" & número_ano & "\Controlo_Mensal_" & número_ano & "\" & número_mês_anterior & "_Controlo_" & designação_mês_anterior & "\" & número_mês_anterior & "_3_HT-FICHEIROS_" & número_ano & "\" & número_mês_anterior & "_CENCAL_Volume_Mensal_" & designação_mês_anterior & número_ano & ".xlsm")
    
    'Atribui à variável livro_pesquisa o livro do mês anterior
    Set livro_pesquisa = ActiveWorkbook
    
    Set ultcel_extrair = livro_pesquisa.Worksheets("Folha1").Range("A" & Rows.Count).End(xlUp)
    
    'Explicação: A coluna 10 é onde se encontra a primeira informação que interessa: janeiro horas
    'Na coluna 11, temos a segunda informação: janeiro volume
    'Se o mês atual for 2, o primeiro em que esta análise é efetuada porque já há histórico, só se analisa janeiro, daí que número_mês - 2 vá anular a multiplicação (2-2=0)
    'A partir de março, por exemplo, ficará 3 - 2 = 1, e serão incluídas 2 colunas adicionais: março horas e março volume
    'Em dezembro, por exemplo, será (12 - 2) * 2 = 20, o que somando à coluna 11 dará 31, que corresponde exatamente a volume novembro
    
    Set área_extrair = livro_pesquisa.Worksheets("Folha1").Range(Cells(ultcel_extrair.Row, 10), Cells(ultcel_extrair.Row, 11 + (número_mês - 2) * 2))
    
    área_extrair.Copy
    
    'Retorna ao livro atual
    livro_atual.Activate
    w.Select
    
    Range("J" & ultcel.Row + 7).PasteSpecial Paste:=xlPasteValues, Operation:=xlNone, SkipBlanks _
        :=False, Transpose:=False
    
    Application.CutCopyMode = False
    
    'Estrutura de repetição para apuramento das eventuais diferenças
    w.Range("J" & ultcel.Row + 7).Select
    
    Do While ActiveCell.Value <> "":
    
        'Valor atual - Valor mês anterior
        If ActiveCell.Offset(-7, 0) - ActiveCell.Value = 0 Then
        
            ActiveCell.Offset(1, 0).Value = "N.A."
        
        Else
        
            ActiveCell.Offset(1, 0).Value = ActiveCell.Offset(-7, 0) - ActiveCell.Value
        
        End If
        
        ActiveCell.Offset(0, 1).Select
        
    Loop
    
    'Insere nota na lateral esquerda dos dados
    w.Range("F" & ultcel.Row + 7).Value = "Valores do mapa mensal anterior"
    w.Range("F" & ultcel.Row + 8).Value = "Diferença"
    w.Range("F" & ultcel.Row + 9).Value = "Ações:"
    
    'Une as células com as notas
    w.Range("F" & ultcel.Row + 7 & ":I" & ultcel.Row + 7).Merge
    w.Range("F" & ultcel.Row + 8 & ":I" & ultcel.Row + 8).Merge
    w.Range("F" & ultcel.Row + 9 & ":I" & ultcel.Row + 9).Merge
    
    'Insere cor nas notas laterais esquerdas
    w.Range("F" & ultcel.Row + 7 & ":F" & ultcel.Row + 9).Interior.Color = RGB(146, 205, 220)
    
    'Coloca a negrito as linhas prentiddas
    Rows(ultcel.Row + 7 & ":" & ultcel.Row + 9).Font.Bold = True
    
    'Insere limites na área pretendida
    
    w.Range("F" & ultcel.Row + 7 & ":I" & ultcel.Row + 9).Borders.LineStyle = xlcontinuos
    w.Range("F" & ultcel.Row + 7 & ":I" & ultcel.Row + 9).Borders.Weight = xlThin
    
    'Define área onde os números e diferenças estão e insere limites
    Dim área_análise As Range
    Dim ultcel_horizontal As Range
    
    Set ultcel_horizontal = w.Range("J" & ultcel.Row + 7).End(xlToRight).Offset(1, 0)
    
    Set área_análise = w.Range("J" & ultcel.Row + 7 & ":" & ultcel_horizontal.Address)
    
    With área_análise
        .Borders.LineStyle = xlcontinuos
        .Borders.Weight = xlThin
        .Interior.Color = RGB(183, 222, 232)
    End With

    'Estrutura de repetição para unir células para futura identificação das ações na origem das diferenças
    'Vai buscar o Nº de ações, pois representa o máximo de ações em que podem existir diferenças
    For i = 0 To ultcel.Offset(0, 1).Value:
    
        w.Range(Cells(ultcel.Row + 10 + i, 6), Cells(ultcel.Row + 10 + i, 9)).Merge
        
    Next i

End If

'Estrutura de repetição para colocar apenas uma casa decimal em todas as colunas com os volumes
'Coluna de começo = 9 e fim = 35; step 2 em 2

For c = 9 To 35 Step 2:

    w.Range(Cells(3, c), Cells(ultcel.Row + 7, c)).Select
    Selection.NumberFormat = "0.0"

Next c

'---------------------------------------------------------------------------------------------
'Processo de identificação das ações que estiveram na origem das diferenças em horas e volume
'---------------------------------------------------------------------------------------------

'Célula onde começam os valores das diferenças mensais
Dim célula_início_diferenças As Variant
célula_início_diferenças = w.Range("J" & ultcel.Row + 8).Address

Dim coluna_em_análise As Long

'Variáveis de controlo do livro anterior
Dim ação_livro_anterior As String
Dim ação_valor_coluna_livro_anterior As Double

Dim ação_valor_coluna_livro_atual As Double
Dim diferença_entre_valores As Double

'Váriáveis para controlo de área na função PROCX
Dim livro_atual_códigos_ação As Range
Dim livro_atual_coluna_valor As Range

Set livro_atual_códigos_ação = livro_atual.Worksheets("Folha1").Range("A:A")

'Variáveis para controlo da acumulação de códigos de ação na origem das diferenças
Dim local_abaixo_nota_lateral_ações As Range
Dim pos As Long

Set local_abaixo_nota_lateral_ações = w.Range("F" & ultcel.Row + 10)

pos = 0

w.Range(célula_início_diferenças).Select

'Estrutura de repetição para percorrer as células com o valor das diferenças
'Inicialmente, estavas apenas a analisar as colunas com valor diferente de "N.A.", indicando que havia diferença
'No entanto, como 2 ações com diferenças se podem anular uma à outra, retirei esse IF

Do While ActiveCell.Value <> "":
        
    coluna_em_análise = ActiveCell.Column
    
    'Define como área uma coluna inteira, com inserção de um número invês de letra da coluna
    Set livro_atual_coluna_valor = livro_atual.Worksheets("Folha1").Cells(coluna_em_análise).EntireColumn
    
    'Ativa o ficheiro do mês anterior
    livro_pesquisa.Activate
    
    livro_pesquisa.Worksheets("Folha1").Range("A3").Select

    'Percorre toda a coluna das ações no livro do mês anterior
    Do While ActiveCell.Row < ultcel_extrair.Row:
    
        ação_livro_anterior = ActiveCell.Text
        'Vai buscar o valor da ação na coluna do mês anterior (hora ou volume) em que foi detactada a diferença
        ação_valor_coluna_livro_anterior = ActiveCell.Offset(0, coluna_em_análise - 1).Value
        
        'PROCX para determinar o valor de horas ou volume no mapa atual
        ação_valor_coluna_livro_atual = Application.WorksheetFunction.XLookup(ação_livro_anterior, livro_atual_códigos_ação, livro_atual_coluna_valor, "ERRO", 0)
        
        '-----------------------------------------------------------------------------------------------------
        'Se houver diferença, regista-se e anota-se qual a ação e qual o valor da diferença no local respetivo
        '-----------------------------------------------------------------------------------------------------
        diferença_entre_valores = ação_valor_coluna_livro_atual - ação_valor_coluna_livro_anterior
        
        If diferença_entre_valores <> 0 Then
            'Primeiro é necessário voltar a selecionar o livro atual
            livro_atual.Activate
        
            'Regista, abaixo de "Ações:", o nome da ação na origem de diferenças
            local_abaixo_nota_lateral_ações.Offset(pos, 0).Value = ação_livro_anterior
            
            'Regista, na coluna pretendida, o valor da diferença --> Como se começa na coluna 6, é necessário descontar esse valor e -3 pela união de células onde o código da ação ficou registado
            local_abaixo_nota_lateral_ações.Offset(pos, coluna_em_análise - 6 - 3).Value = diferença_entre_valores
            
            'Controla o nº da linha a inserir dados, gerindo a acumulação de ações
            pos = pos + 1
            
            'Retoma ao livro do mês anterior
            livro_pesquisa.Activate
            
        End If

        ActiveCell.Offset(1, 0).Select

    Loop

    'Retorna ao livro atual, para continuar a analisar se houver diferenças nos valores mensais
    livro_atual.Activate
    
    ActiveCell.Offset(0, 1).Select

Loop

'Fecha o livro relativo ao mês anterior, pois já foram analisados todos os dados
livro_pesquisa.Close savechanges:=False

'-----------------------------------------------
'Formatação dos dados com as diferenças apuradas
'-----------------------------------------------
Dim área_com_códigos As Range
Dim número_última_linha As Long

Dim área_com_diferenças_parciais As Range

número_última_linha = w.Range("F" & Rows.Count).End(xlUp).Row

Set área_com_códigos = w.Range(local_abaixo_nota_lateral_ações.Address & ":I" & número_última_linha)

With área_com_códigos
    .Borders.LineStyle = xlcontinuos
    .Borders.Weight = xlThin
    .Interior.Color = RGB(183, 222, 232)
End With

Set área_com_diferenças_parciais = w.Range("J" & local_abaixo_nota_lateral_ações.Row & ":AE" & número_última_linha)

For Each cell In área_com_diferenças_parciais:

    If cell.Value <> "" Then
    
        With cell
            .Interior.Color = RGB(183, 222, 232)
            .Borders.LineStyle = xlcontinuos
            .Borders.Weight = xlThin
        End With
        
    End If
    
Next
'---------------------------------------------------------------------------
'Preparação do documento para impressão
'---------------------------------------------------------------------------
With w.PageSetup
    .RightHeaderPicture.Height = 75
    .RightHeaderPicture.Width = 75
    .PrintTitleRows = "$1:$2"
    .LeftMargin = Application.InchesToPoints(0.25)
    .RightMargin = Application.InchesToPoints(0.25)
    .TopMargin = Application.InchesToPoints(0.75)
    .BottomMargin = Application.InchesToPoints(0.75)
    .HeaderMargin = Application.InchesToPoints(0.3)
    .FooterMargin = Application.InchesToPoints(0.3)
    .Zoom = False
    .FitToPagesWide = 1
    .PrintArea = "$A$1:$AI$" & w.Range("F" & Rows.Count).End(xlUp).Row
End With

'---------------------------------------------------------------------------
'Submissão do ficheiro no ambiente de trabalho
'---------------------------------------------------------------------------

resposta = MsgBox("Pretende guardar os ficheiros Excel e .PDF no ambiente de trabalho?", vbQuestion + vbYesNo, "Guardar ficheiros")

If resposta = vbNo Then

    Exit Sub
    
End If

'Guarda automicamente a folha em formato .pdf, no ambiente de trabalho e com nome dinâmico

ActiveSheet.ExportAsFixedFormat Type:=xlTypePDF, Filename:= _
        "C:\Users\joaogrilo\Desktop\" & número_mês & "_CENCAL_Volume_Mensal_" & designação_mês & número_ano & ".pdf", Quality:= _
        xlQualityStandard, IncludeDocProperties:=True, IgnorePrintAreas:=False, _
        OpenAfterPublish:=True

'Guarda automaticamente o ficheiro em Excel no ambiente de trabalho, com o nome pretendido e dinâmico

ActiveWorkbook.SaveAs Filename:= _
        "C:\Users\joaogrilo\Desktop\" & número_mês & "_CENCAL_Volume_Mensal_" & designação_mês & número_ano, FileFormat:= _
        xlOpenXMLWorkbookMacroEnabled, CreateBackup:=False

Application.ScreenUpdating = True

End Sub
